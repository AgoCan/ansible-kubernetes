
- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
  - "{{ bin_dir }}"
  - "{{ base_dir }}"
  - "{{ base_dir }}/ssl"
  - "{{ base_dir }}/bin"

- name: 创建cfssl命令
  copy: src={{ base_dir }}/bin/{{ item }} dest={{ bin_dir }}/{{ item }} mode=0755
  with_items:
  - cfssl
  - cfssljson
  - cfssl-certinfo
  
- name: 准备 ca-config 证书签名请求
  template: src=ca-config.json.j2 dest={{ base_dir }}/ssl/ca-config.json
- name: 准备 ca-csr 证书签名请求
  template: src=ca-csr.json.j2 dest={{ base_dir }}/ssl/ca-csr.json

- name: 生成 ca 证书
  shell: "cd {{ base_dir }}/ssl && \
  {{ bin_dir }}/cfssl gencert -initca ca-csr.json | {{ bin_dir }}/cfssljson -bare ca" 
  run_once: true

- name: 准备 etcd 证书签名请求
  template: src=etcd-csr.json.j2 dest={{ base_dir }}/ssl/etcd-csr.json

- name: 生成 etcd 证书
  shell: "cd {{ base_dir }}/ssl && \
  {{ bin_dir }}/cfssl \
  gencert -ca={{ base_dir }}/ssl/ca.pem \
  -ca-key={{ base_dir }}/ssl/ca-key.pem \
  -config={{ base_dir }}/ssl/ca-config.json \
  -profile=kubernetes etcd-csr.json | {{ bin_dir }}/cfssljson -bare etcd"
  run_once: true

- name: 准备 kubernetes 证书签名请求
  template: src=kubernetes-csr.json.j2 dest={{ base_dir }}/ssl/kubernetes-csr.json

# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
- name: 生成 kubernetes 证书
  shell: "cd {{ base_dir }}/ssl && \
  {{ bin_dir }}/cfssl \
  gencert -ca={{ base_dir }}/ssl/ca.pem \
  -ca-key={{ base_dir }}/ssl/ca-key.pem \
  -config={{ base_dir }}/ssl/ca-config.json \
  -profile=kubernetes kubernetes-csr.json | {{ bin_dir }}/cfssljson -bare kubernetes"
  run_once: true
- name: 准备 admin 证书签名请求
  template: src=admin-csr.json.j2 dest={{ base_dir }}/ssl/admin-csr.json

- name: 生成 admin 证书
  shell: "cd {{ base_dir }}/ssl && \
  {{ bin_dir }}/cfssl \
  gencert -ca={{ base_dir }}/ssl/ca.pem \
  -ca-key={{ base_dir }}/ssl/ca-key.pem \
  -config={{ base_dir }}/ssl/ca-config.json \
  -profile=kubernetes admin-csr.json | {{ bin_dir }}/cfssljson -bare admin"
  run_once: true
- name: 准备 proxy 证书签名请求
  template: src=kube-proxy-csr.json.j2 dest={{ base_dir }}/ssl/kube-proxy-csr.json

- name: 生成 proxy 证书
  shell: "cd {{ base_dir }}/ssl && \
  {{ bin_dir }}/cfssl \
  gencert -ca={{ base_dir }}/ssl/ca.pem \
  -ca-key={{ base_dir }}/ssl/ca-key.pem \
  -config={{ base_dir }}/ssl/ca-config.json \
  -profile=kubernetes kube-proxy-csr.json | {{ bin_dir }}/cfssljson -bare kube-proxy"
  run_once: true

- name: 生成 bootstrap-token
  shell: "cd {{ base_dir }}/ssl && \
          export BOOTSTRAP_TOKEN=$(head -c 16 /dev/urandom | od -An -t x | tr -d ' ') &&\
          echo ${BOOTSTRAP_TOKEN},kubelet-bootstrap,10001,'system:kubelet-bootstrap' > bootstrap-token.csv"
  run_once: true
